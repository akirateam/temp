---
- name: "Inicializar variáveis para determinação de saltos em {{ cluster_name }}"
  ansible.builtin.set_fact:
    calculated_upgrade_hops: []
    control_mcps_globally: false

- name: "Determinar saltos para alvo {{ target_aro_version }} (Canal: {{ target_channel_eus }})"
  vars:
    current_major_minor: "{{ current_cluster_version.split('.')[0] }}.{{ current_cluster_version.split('.')[1] }}"
  block:
    - name: "Definir caminho de upgrade para 4.16.40"
      ansible.builtin.set_fact:
        calculated_upgrade_hops: ["4.15.44", "4.16.40"]
        control_mcps_globally: true
      when:
        - target_aro_version == "4.16.40"
        - target_channel_eus == "eus-4.16"
        - current_major_minor == "4.14"

    - name: "Definir caminho de upgrade para 4.18.13"
      ansible.builtin.set_fact:
        calculated_upgrade_hops: ["4.17.29", "4.18.13"]
        control_mcps_globally: true
      when:
        - target_aro_version == "4.18.13"
        - target_channel_eus == "eus-4.18"
        - current_major_minor == "4.16"

    - name: "Verificar se um caminho de upgrade estático foi definido para {{ target_aro_version }}"
      ansible.builtin.assert:
        that:
          - calculated_upgrade_hops | length > 0 or not control_mcps_globally
        fail_msg: >
          Nenhum caminho de upgrade estático definido ou aplicável para a combinação de:
          Versão Alvo: {{ target_aro_version }}, Canal Alvo: {{ target_channel_eus }},
          e Versão Corrente Major.Minor: {{ current_major_minor }}.
          Verifique as condições e os caminhos estáticos definidos.
      when: target_aro_version in ["4.16.40", "4.18.13"]

    # Bloco de ajuste/filtragem dos saltos definidos estaticamente usando loop manual
    - name: "Ajustar saltos estáticos: remover saltos <= {{ current_cluster_version }} (cluster: {{ cluster_name }})"
      when: calculated_upgrade_hops | length > 0
      block:
        - name: "Debug: Saltos ANTES da filtragem manual"
          ansible.builtin.debug:
            var: calculated_upgrade_hops
            verbosity: 1

        - name: "Inicializar lista temporária para saltos filtrados manualmente"
          ansible.builtin.set_fact:
            _manually_filtered_hops: []

        - name: "Filtrar manualmente saltos que são <= current_cluster_version"
          ansible.builtin.set_fact:
            # Adiciona o hop_item à lista se ele for > current_cluster_version
            _manually_filtered_hops: "{{ _manually_filtered_hops + [hop_item] }}"
          loop: "{{ calculated_upgrade_hops }}"
          loop_control:
            loop_var: hop_item # Usar um loop_var específico
          # Condição: hop_item > current_cluster_version
          when: hop_item is version(current_cluster_version, '>')

        - name: "Atualizar calculated_upgrade_hops com a lista filtrada manualmente"
          ansible.builtin.set_fact:
            calculated_upgrade_hops: "{{ _manually_filtered_hops }}"

        - name: "Debug: Saltos estáticos APÓS filtragem manual"
          ansible.builtin.debug:
            var: calculated_upgrade_hops
            verbosity: 1

        - name: "Verificar se, após filtragem, o último salto ainda é o alvo (se houver saltos restantes)"
          when: calculated_upgrade_hops | length > 0
          ansible.builtin.assert:
            that:
              - calculated_upgrade_hops[-1] == target_aro_version
            fail_msg: >
              Após filtrar os saltos estáticos que já foram ultrapassados, o último salto restante
              ({{ calculated_upgrade_hops[-1] }}) não corresponde à 'target_aro_version' ({{ target_aro_version }}).
              Isso pode significar que a current_cluster_version ({{ current_cluster_version }}) já é igual ou superior ao target_aro_version
              OU que a lista de saltos explícitos não estava correta para a versão atual.
              Saltos calculados restantes: {{ calculated_upgrade_hops }}.

  when: "current_cluster_version is version(target_aro_version, '<')"

- name: "Falhar se nenhum caminho estático foi aplicável e o upgrade ainda é necessário"
  ansible.builtin.fail:
    msg: >
      Nenhum caminho de upgrade estático foi encontrado para o alvo {{ target_aro_version }} (canal {{ target_channel_eus }})
      a partir da versão atual {{ current_cluster_version }} (canal {{ initial_cluster_channel }}) no cluster {{ cluster_name }}.
      Este playbook atualmente suporta caminhos estáticos para 4.16.40 (de 4.14.xx) e 4.18.13 (de 4.16.xx).
  when:
    - "current_cluster_version is version(target_aro_version, '<')"
    - not (calculated_upgrade_hops | length > 0) # Se nenhum salto foi definido pelos blocos 'when' acima

- name: "Definir saltos vazios se já estiver no alvo ou além (garantia final)"
  ansible.builtin.set_fact:
    calculated_upgrade_hops: []
    control_mcps_globally: false
  when: "current_cluster_version is version(target_aro_version, '>=')"

- name: "Exibir saltos de upgrade EUS finais para {{ cluster_name }}"
  ansible.builtin.debug:
    msg: "Cluster {{ cluster_name }}: Saltos de upgrade calculados: {{ calculated_upgrade_hops }}. Controle Global de MCPs: {{ control_mcps_globally }}"
  when: calculated_upgrade_hops is defined