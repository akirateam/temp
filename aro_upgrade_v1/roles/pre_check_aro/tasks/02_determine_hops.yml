---
- name: Inicializar lista de saltos de upgrade para {{ cluster_name }}
  ansible.builtin.set_fact:
    calculated_upgrade_hops: []

- name: Definir saltos estáticos baseados na target_aro_version
  block:
    - name: Definir saltos para target_aro_version 4.16.40
      ansible.builtin.set_fact:
        calculated_upgrade_hops:
          - "4.15.44"
          - "4.16.40"
      when: target_aro_version == "4.16.40"

    - name: Definir saltos para target_aro_version 4.18.13
      ansible.builtin.set_fact:
        calculated_upgrade_hops:
          - "4.17.19"
          - "4.18.13"
      when: target_aro_version == "4.18.13"

    - name: Validar se a versão atual do cluster permite o caminho estático
      ansible.builtin.assert:
        that:
          - (target_aro_version == "4.16.40" and current_cluster_version is version('4.15.44', '<')) or
            (target_aro_version == "4.18.13" and current_cluster_version is version('4.17.19', '<'))
        fail_msg: >
          A versão atual do cluster ({{ current_cluster_version }}) não é compatível com o início do caminho de upgrade
          estático definido para {{ target_aro_version }}. Para 4.16.40, comece de < 4.15.44 (idealmente 4.14.X).
          Para 4.18.13, comece de < 4.17.19 (idealmente 4.16.X).
      when: calculated_upgrade_hops | length > 0

    - name: "Ajustar lista de saltos: remover saltos <= current_cluster_version"
      ansible.builtin.set_fact:
        calculated_upgrade_hops: "{{ calculated_upgrade_hops | select('version', '>', current_cluster_version) | list }}"
      when: calculated_upgrade_hops | length > 0

  when: "current_cluster_version is version(target_aro_version, '<')"

- name: "Exibir saltos de upgrade ESTÁTICOS determinados para {{ cluster_name }}"
  ansible.builtin.debug:
    var: calculated_upgrade_hops
  when: calculated_upgrade_hops is defined and calculated_upgrade_hops | length > 0

- name: "Falhar se nenhum salto for aplicável e o upgrade for necessário (após ajuste)"
  ansible.builtin.fail:
    msg: >
      Nenhum salto de upgrade aplicável encontrado para {{ cluster_name }} de {{ current_cluster_version }}
      para {{ target_aro_version }} usando o caminho estático definido.
      Saltos calculados (após filtro): {{ calculated_upgrade_hops }}.
  when:
    - "current_cluster_version is version(target_aro_version, '<')"
    - calculated_upgrade_hops | length == 0