---
- name: "Obter versão atual do cluster {{ cluster_name }} antes do salto para {{ target_hop_version }}"
  kubernetes.core.k8s_info:
    kind: ClusterVersion
    api_version: config.openshift.io/v1
    name: version
  register: r_cluster_version_current_hop_pre
  retries: 3
  delay: 10

- name: Definir current_version_before_hop
  ansible.builtin.set_fact:
    current_version_before_hop: "{{ r_cluster_version_current_hop_pre.resources[0].status.desired.version }}"

- name: "INICIANDO Salto de Upgrade para: {{ target_hop_version }} em {{ cluster_name }}"
  ansible.builtin.debug:
    msg: "Cluster: {{ cluster_name }}. Iniciando processo de upgrade de {{ current_version_before_hop }} para {{ target_hop_version }}"

- name: "Health Check (Comum): Pré-Salto para {{ target_hop_version }} em {{ cluster_name }}"
  include_tasks: _common_health_check.yml
  vars:
    health_check_stage_name: "Cluster {{ cluster_name }} - Pré-Salto para {{ target_hop_version }}"

- name: Determinar canal EUS para o salto alvo ({{ target_hop_version }})
  ansible.builtin.set_fact:
    target_hop_eus_channel: "eus-{{ target_hop_version.split('.')[0] }}.{{ target_hop_version.split('.')[1] }}"

- name: "Iniciar upgrade para {{ target_hop_version }} no canal {{ target_hop_eus_channel }} em {{ cluster_name }}"
  ansible.builtin.command: >
    oc adm upgrade --to={{ target_hop_version }}
    --allow-explicit-upgrade
    --allow-upgrade-with-warnings
    --force=false
    --acknowledge-critical-updates=true
    --channel={{ target_hop_eus_channel }}
  register: r_upgrade_command
  changed_when: >
    r_upgrade_command.rc == 0 and
    ('Update to {{ target_hop_version }} is already in progress' not in r_upgrade_command.stdout_lines | join(' ')) and
    ('Update to {{ target_hop_version }} is already recommended' not in r_upgrade_command.stdout_lines | join(' ')) and
    ('Update to {{ target_hop_version }} already completed' not in r_upgrade_command.stdout_lines | join(' '))
  failed_when: >
    r_upgrade_command.rc != 0 and
    ('already recommended' not in r_upgrade_command.stdout_lines | join(' ')) and
    ('already in progress' not in r_upgrade_command.stdout_lines | join(' ')) and
    ('already completed' not in r_upgrade_command.stdout_lines | join(' '))

- name: "Monitorar Progresso do Upgrade para {{ target_hop_version }} (CVO) em {{ cluster_name }}"
  kubernetes.core.k8s_info:
    kind: ClusterVersion
    api_version: config.openshift.io/v1
    name: version
  register: r_cv_status_hop
  until: >
    r_cv_status_hop.resources is defined and
    r_cv_status_hop.resources | length > 0 and
    r_cv_status_hop.resources[0].status.desired.version == target_hop_version and
    (r_cv_status_hop.resources[0].status.conditions | selectattr('type', 'equalto', 'Available') | first).status == 'True' and
    (r_cv_status_hop.resources[0].status.conditions | selectattr('type', 'equalto', 'Progressing') | first).status == 'False' and
    (r_cv_status_hop.resources[0].status.conditions | selectattr('type', 'equalto', 'Degraded') | first).status == 'False'
  retries: 360
  delay: 60
  vars:
    ansible_command_timeout: 7200

- name: "Health Check (Comum): Pós-Salto para {{ target_hop_version }} (CVO Concluído) em {{ cluster_name }}"
  include_tasks: _common_health_check.yml
  vars:
    health_check_stage_name: "Cluster {{ cluster_name }} - Pós-Salto {{ target_hop_version }} (CVO Concluído)"

- name: "Verificar status do MCP worker (enquanto pausado) após CVO para {{ target_hop_version }}"
  kubernetes.core.k8s_info:
    kind: MachineConfigPool
    api_version: machineconfiguration.openshift.io/v1
    name: worker
  register: r_mcp_status_while_paused
  when: control_mcps_globally

- name: "Debug: Status do MCP worker (pausado) para {{ target_hop_version }} em {{ cluster_name }}"
  ansible.builtin.debug:
    var: r_mcp_status_while_paused.resources[0].status
  when: control_mcps_globally and r_mcp_status_while_paused.resources is defined

- name: "Sumário do Salto {{ target_hop_version }} para {{ cluster_name }}"
  ansible.builtin.debug:
    msg:
      - "Cluster: {{ cluster_name }}"
      - "Salto de upgrade para {{ target_hop_version }} concluído (CVO)."
      - "Versão anterior ao salto: {{ current_version_before_hop }}"
      - "Versão atual após salto (CVO): {{ r_cv_status_hop.resources[0].status.desired.version }}"
      - "MCPs dos workers permanecem pausados até o final de todos os saltos."
      - "Status: OK (CVO)"
  when: control_mcps_globally

- name: "Sumário do Salto {{ target_hop_version }} para {{ cluster_name }} (sem controle global de MCP)"
  ansible.builtin.debug:
    msg:
      - "Cluster: {{ cluster_name }}"
      - "Salto de upgrade para {{ target_hop_version }} concluído (CVO)."
      - "Versão anterior ao salto: {{ current_version_before_hop }}"
      - "Versão atual após salto (CVO): {{ r_cv_status_hop.resources[0].status.desired.version }}"
      - "Status: OK (CVO)"
  when: not control_mcps_globally