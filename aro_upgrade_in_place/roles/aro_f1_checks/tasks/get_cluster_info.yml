---
# Coleta informações básicas do cluster, operadores, nós e MCPs.
# Módulos kubernetes.core usarão credenciais do ambiente AAP.

- name: GET_CLUSTER_INFO | Obter informações do objeto ClusterVersion 'version'
  kubernetes.core.k8s_info:
    kind: ClusterVersion
    api_version: config.openshift.io/v1
    name: version
  register: r_cv_details
  failed_when: "r_cv_details.resources | length == 0"
  retries: 3 # Adiciona resiliência para falhas transientes de rede
  delay: 10  # Espera 10s entre tentativas

- name: GET_CLUSTER_INFO | Definir fatos básicos do cluster a partir do ClusterVersion
  ansible.builtin.set_fact:
    aro_cluster_info:
      cluster_version_obj: "{{ r_cv_details.resources[0] }}"
      current_version: "{{ r_cv_details.resources[0].status.desired.version }}"
      current_channel: "{{ r_cv_details.resources[0].spec.channel | default('') }}"
      current_image: "{{ r_cv_details.resources[0].status.desired.image }}"
      available_updates: "{{ r_cv_details.resources[0].status.availableUpdates | default([]) }}"
      history: "{{ r_cv_details.resources[0].status.history | default([]) }}" # Útil para ver upgrades passados
      conditions: "{{ r_cv_details.resources[0].status.conditions | default([]) }}"
    cv_condition_available: "{{ (r_cv_details.resources[0].status.conditions | selectattr('type', 'equalto', 'Available') | map(attribute='status') | first | default('False')) == 'True' }}"
    cv_condition_progressing: "{{ (r_cv_details.resources[0].status.conditions | selectattr('type', 'equalto', 'Progressing') | map(attribute='status') | first | default('False')) == 'True' }}"
    cv_condition_degraded: "{{ (r_cv_details.resources[0].status.conditions | selectattr('type', 'equalto', 'Degraded') | map(attribute='status') | first | default('False')) == 'True' }}"

- name: GET_CLUSTER_INFO | Obter status de todos os ClusterOperators
  kubernetes.core.k8s_info:
    kind: ClusterOperator
    api_version: config.openshift.io/v1
  register: r_cluster_operators

- name: GET_CLUSTER_INFO | Processar status dos ClusterOperators
  ansible.builtin.set_fact:
    aro_co_status:
      total: "{{ r_cluster_operators.resources | length }}"
      all_available: "{{ not (r_cluster_operators.resources | selectattr('status.conditions', 'selectattr', 'type', 'equalto', 'Available') | selectattr('status.conditions', 'selectattr', 'status', 'equalto', 'False') | list) }}"
      degraded_operators: "{{ r_cluster_operators.resources | selectattr('status.conditions', 'selectattr', 'type', 'equalto', 'Degraded') | selectattr('status.conditions', 'selectattr', 'status', 'equalto', 'True') | map(attribute='metadata.name') | list }}"
    aro_co_degraded_count: "{{ (r_cluster_operators.resources | selectattr('status.conditions', 'selectattr', 'type', 'equalto', 'Degraded') | selectattr('status.conditions', 'selectattr', 'status', 'equalto', 'True') | list | length) }}"

- name: GET_CLUSTER_INFO | Obter status de todos os Nós (Nodes)
  kubernetes.core.k8s_info:
    kind: Node
    # api_version: v1 # O default para k8s_info é v1 para Node
  register: r_nodes

- name: GET_CLUSTER_INFO | Processar status dos Nós
  ansible.builtin.set_fact:
    aro_node_status:
      total: "{{ r_nodes.resources | length }}"
      ready_count: >-
        {{ r_nodes.resources |
           selectattr('status.conditions', 'selectattr', 'type', 'equalto', 'Ready') |
           selectattr('status.conditions', 'selectattr', 'status', 'equalto', 'True') | list | length }}
    aro_nodes_not_ready_list: >-
        {{ r_nodes.resources |
           rejectattr('status.conditions', 'selectattr', 'type', 'equalto', 'Ready') | # Ou que não tenham o status 'True'
           map(attribute='metadata.name') | list }}

- name: GET_CLUSTER_INFO | Obter status dos MachineConfigPools (MCPs)
  kubernetes.core.k8s_info:
    kind: MachineConfigPool
    api_version: machineconfiguration.openshift.io/v1
  register: r_mcps

- name: GET_CLUSTER_INFO | Processar status dos MCPs
  ansible.builtin.set_fact:
    aro_mcp_status:
      all_updated: >-
        {{ not (r_mcps.resources | selectattr('status.updatedMachineCount', '!=', item.status.machineCount) | list) }}
      degraded_mcps: >-
        {{ r_mcps.resources |
           selectattr('status.conditions', 'selectattr', 'type', 'equalto', 'Degraded') |
           selectattr('status.conditions', 'selectattr', 'status', 'equalto', 'True') |
           map(attribute='metadata.name') | list }}
      mcp_details: "{{ r_mcps.resources | items2dict(key_name='metadata.name', value_name='status') }}"

- name: GET_CLUSTER_INFO | Sumarizar saúde geral do cluster para display e validação rápida
  ansible.builtin.set_fact:
    aro_cluster_health_summary: >-
      CV_Available={{ cv_condition_available }},
      CV_Progressing={{ cv_condition_progressing }},
      CV_Degraded={{ cv_condition_degraded }};
      CO_All_Available={{ aro_co_status.all_available }} (Degraded_CO_Count={{ aro_co_degraded_count }});
      Nodes_Ready={{ aro_node_status.ready_count }}/{{ aro_node_status.total }};
      MCPs_All_Updated={{ aro_mcp_status.all_updated }} (Degraded_MCP_Count={{ aro_mcp_status.degraded_mcps | length }})

- name: GET_CLUSTER_INFO | Salvar objetos coletados em um arquivo JSON para análise detalhada
  ansible.builtin.copy:
    content: |
      {
        "cluster_version": {{ aro_cluster_info | to_nice_json }},
        "cluster_operators": {{ r_cluster_operators.resources | to_nice_json }},
        "nodes": {{ r_nodes.resources | to_nice_json }},
        "mcps": {{ r_mcps.resources | to_nice_json }}
      }
    dest: "{{ f1_artifact_dir }}/cluster_objects_pre_upgrade.json"
  when: aro_cluster_info is defined